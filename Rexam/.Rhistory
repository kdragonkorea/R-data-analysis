btn$clickElement()
btn <- remDr$findElement(using = "css selector", "div.review_ta.ng-scope > div.paginate > a.direction.next")
# btn$getElementText() #findElements를 사용할 경우 리스트의 원소별로 추출해야 함.
btn$clickElement()
btn <- remDr$findElement(using = "css selector", "div.review_ta.ng-scope > div.paginate > a.direction.next")
# btn$getElementText() #findElements를 사용할 경우 리스트의 원소별로 추출해야 함.
btn$clickElement()
btn <- remDr$findElement(using = "css selector", "div.review_ta.ng-scope > div.paginate > a.direction.next")
# btn$getElementText() #findElements를 사용할 경우 리스트의 원소별로 추출해야 함.
btn$clickElement()
btn <- remDr$findElement(using = "css selector", "div.review_ta.ng-scope > div.paginate > a.direction.next")
# btn$getElementText() #findElements를 사용할 경우 리스트의 원소별로 추출해야 함.
btn$clickElement()
btn <- remDr$findElement(using = "css selector", "div.review_ta.ng-scope > div.paginate > a.direction.next")
# btn$getElementText() #findElements를 사용할 경우 리스트의 원소별로 추출해야 함.
btn$clickElement()
reple <- NULL; btn <- NULL;
btn <- remDr$findElement(using = "css selector", "div.review_ta.ng-scope > div.paginate > a.direction.next")
# btn$getElementText() #findElements를 사용할 경우 리스트의 원소별로 추출해야 함.
btn$clickElement()
url<-'https://hotel.naver.com/hotels/item?hotelId=hotel:Shilla_Stay_Yeoksam&destination_kor=%EC%8B%A0%EB%9D%BC%EC%8A%A4%ED%85%8C%EC%9D%B4%20%EC%97%AD%EC%82%BC&rooms=2'
remDr$navigate(url)
for (i in 1:2) {
doms <- remDr$findElements(using = "css selector", "div.review_ta.ng-scope > ul > li > div.review_desc > p")
reple_v <- sapply(doms, function (x) {x$getElementText()})
reple <- append(reple, unlist(reple_v))
print(reple)
Sys.sleep(2)
btn <- remDr$findElement(using = "css selector", "div.review_ta.ng-scope > div.paginate > a.direction.next")
# btn$getElementText() #findElements를 사용할 경우 리스트의 원소별로 추출해야 함.
btn$clickElement()
}
repeat{
doms <- remDr$findElements(using = "css selector", "div.review_ta.ng-scope > ul > li > div.review_desc > p")
reple_v <- sapply(doms, function (x) {x$getElementText()})
reple <- append(reple, unlist(reple_v))
length(reple)
Sys.sleep(2)
btn <- remDr$findElement(using = "css selector", "div.review_ta.ng-scope > div.paginate > a.direction.next")
# btn$getElementText() #findElements를 사용할 경우 리스트의 원소별로 추출해야 함.
btn$clickElement()
if(btn$getElementAttribute("class") == "direction next disabled"){
break;
}
}
reple
url<-'https://hotel.naver.com/hotels/item?hotelId=hotel:Shilla_Stay_Yeoksam&destination_kor=%EC%8B%A0%EB%9D%BC%EC%8A%A4%ED%85%8C%EC%9D%B4%20%EC%97%AD%EC%82%BC&rooms=2'
remDr$navigate(url)
reple <- NULL;
repeat{
doms <- remDr$findElements(using = "css selector", "div.review_ta.ng-scope > ul > li > div.review_desc > p")
reple_v <- sapply(doms, function (x) {x$getElementText()})
reple <- append(reple, unlist(reple_v))
print(length(reple))
Sys.sleep(2)
btn <- remDr$findElement(using = "css selector", "div.review_ta.ng-scope > div.paginate > a.direction.next")
# btn$getElementText() #findElements를 사용할 경우 리스트의 원소별로 추출해야 함.
btn$clickElement()
if(btn$getElementAttribute("class") == "direction next disabled"){
break;
}
}
url<-'https://hotel.naver.com/hotels/item?hotelId=hotel:Shilla_Stay_Yeoksam&destination_kor=%EC%8B%A0%EB%9D%BC%EC%8A%A4%ED%85%8C%EC%9D%B4%20%EC%97%AD%EC%82%BC&rooms=2'
remDr$navigate(url)
url<-'https://hotel.naver.com/hotels/item?hotelId=hotel:Shilla_Stay_Yeoksam&destination_kor=%EC%8B%A0%EB%9D%BC%EC%8A%A4%ED%85%8C%EC%9D%B4%20%EC%97%AD%EC%82%BC&rooms=2'
remDr$navigate(url)
reple <- NULL;
# 첫 페이지 댓글 내용 읽기
doms <- remDr$findElements(using = "css selector", "div.review_ta.ng-scope > ul > li > div.review_desc > p")
reple_v <- sapply(doms, function (x) {x$getElementText()})
reple <- append(reple, unlist(reple_v))
# 다음 버튼을 찾아서 클릭 이벤트를 발생
repeat{
doms <- remDr$findElements(using = "css selector", "div.review_ta.ng-scope > ul > li > div.review_desc > p")
reple_v <- sapply(doms, function (x) {x$getElementText()})
reple <- append(reple, unlist(reple_v))
print(length(reple))
Sys.sleep(2)
btn <- remDr$findElement(using = "css selector", "div.review_ta.ng-scope > div.paginate > a.direction.next")
# btn$getElementText() #findElements를 사용할 경우 리스트의 원소별로 추출해야 함.
btn$clickElement()
if(btn$getElementAttribute("class") == "direction next disabled"){
break; print("끝")
}
}
url<-'https://hotel.naver.com/hotels/item?hotelId=hotel:Shilla_Stay_Yeoksam&destination_kor=%EC%8B%A0%EB%9D%BC%EC%8A%A4%ED%85%8C%EC%9D%B4%20%EC%97%AD%EC%82%BC&rooms=2'
remDr$navigate(url)
reple <- NULL;
# 첫 페이지 댓글 내용 읽기
# doms <- remDr$findElements(using = "css selector", "div.review_ta.ng-scope > ul > li > div.review_desc > p")
# reple_v <- sapply(doms, function (x) {x$getElementText()})
# reple <- append(reple, unlist(reple_v))
repeat{
# 첫 페이지 댓글 내용 읽기
doms <- remDr$findElements(using = "css selector", "div.review_ta.ng-scope > ul > li > div.review_desc > p")
reple_v <- sapply(doms, function (x) {x$getElementText()})
reple <- append(reple, unlist(reple_v))
print(length(reple))
Sys.sleep(2)
# 다음 버튼을 찾아서 클릭 이벤트를 발생
btn <- remDr$findElement(using = "css selector", "div.review_ta.ng-scope > div.paginate > a.direction.next") # btn$getElementText() #findElements를 사용할 경우 리스트의 원소별로 추출해야 함.
btn$clickElement()
# 마지막 페이지의 class 속성이 "direction next disabled" 인 경우 repeat를 끝내라.
if(btn$getElementAttribute("class") == "direction next disabled"){
break;
}
}
print(reple)
reple <- NULL;
url<-'https://hotel.naver.com/hotels/item?hotelId=hotel:Shilla_Stay_Yeoksam&destination_kor=%EC%8B%A0%EB%9D%BC%EC%8A%A4%ED%85%8C%EC%9D%B4%20%EC%97%AD%EC%82%BC&rooms=2'
remDr$navigate(url)
url<-'https://hotel.naver.com/hotels/item?hotelId=hotel:Shilla_Stay_Yeoksam&destination_kor=%EC%8B%A0%EB%9D%BC%EC%8A%A4%ED%85%8C%EC%9D%B4%20%EC%97%AD%EC%82%BC&rooms=2'
remDr$navigate(url)
reple <- NULL;
# 첫 페이지 댓글 내용 읽기
doms <- remDr$findElements(using = "css selector", "div.review_ta.ng-scope > ul > li > div.review_desc > p")
reple_v <- sapply(doms, function (x) {x$getElementText()})
reple <- append(reple, unlist(reple_v))
repeat{
# 첫 페이지 댓글 내용 읽기
doms <- remDr$findElements(using = "css selector", "div.review_ta.ng-scope > ul > li > div.review_desc > p")
reple_v <- sapply(doms, function (x) {x$getElementText()})
reple <- append(reple, unlist(reple_v))
print(length(reple))
Sys.sleep(2)
# 다음 버튼을 찾아서 클릭 이벤트를 발생
btn <- remDr$findElement(using = "css selector", "div.review_ta.ng-scope > div.paginate > a.direction.next") # btn$getElementText() #findElements를 사용할 경우 리스트의 원소별로 추출해야 함.
btn$clickElement()
# 마지막 페이지의 class 속성이 "direction next disabled" 인 경우 repeat를 끝내라.
if(btn$getElementAttribute("class") == "direction next disabled"){
break;
}
}
repeat{
# 다음 버튼을 찾아서 클릭 이벤트를 발생
btn <- remDr$findElement(using = "css selector", "div.review_ta.ng-scope > div.paginate > a.direction.next") # btn$getElementText() #findElements를 사용할 경우 리스트의 원소별로 추출해야 함.
btn$clickElement()
# 첫 페이지 댓글 내용 읽기
doms <- remDr$findElements(using = "css selector", "div.review_ta.ng-scope > ul > li > div.review_desc > p")
reple_v <- sapply(doms, function (x) {x$getElementText()})
reple <- append(reple, unlist(reple_v))
print(length(reple))
Sys.sleep(2)
# 마지막 페이지의 class 속성이 "direction next disabled" 인 경우 repeat를 끝내라.
if(btn$getElementAttribute("class") == "direction next disabled"){
break;
}
}
url<-'https://hotel.naver.com/hotels/item?hotelId=hotel:Shilla_Stay_Yeoksam&destination_kor=%EC%8B%A0%EB%9D%BC%EC%8A%A4%ED%85%8C%EC%9D%B4%20%EC%97%AD%EC%82%BC&rooms=2'
remDr$navigate(url)
reple <- NULL;
# 첫 페이지 댓글 내용 읽기
# doms <- remDr$findElements(using = "css selector", "div.review_ta.ng-scope > ul > li > div.review_desc > p")
# reple_v <- sapply(doms, function (x) {x$getElementText()})
# reple <- append(reple, unlist(reple_v))
repeat{
# 다음 버튼을 찾아서 클릭 이벤트를 발생
btn <- remDr$findElement(using = "css selector", "div.review_ta.ng-scope > div.paginate > a.direction.next") # btn$getElementText() #findElements를 사용할 경우 리스트의 원소별로 추출해야 함.
btn$clickElement()
# 첫 페이지 댓글 내용 읽기
doms <- remDr$findElements(using = "css selector", "div.review_ta.ng-scope > ul > li > div.review_desc > p")
reple_v <- sapply(doms, function (x) {x$getElementText()})
reple <- append(reple, unlist(reple_v))
print(length(reple))
Sys.sleep(2)
# 마지막 페이지의 class 속성이 "direction next disabled" 인 경우 repeat를 끝내라.
if(btn$getElementAttribute("class") == "direction next disabled"){
break;
}
}
remDr <- remoteDriver(remoteServerAddr = "localhost" , port = 4445, browserName = "chrome")
remDr$open()
url<-'https://hotel.naver.com/hotels/item?hotelId=hotel:Shilla_Stay_Yeoksam&destination_kor=%EC%8B%A0%EB%9D%BC%EC%8A%A4%ED%85%8C%EC%9D%B4%20%EC%97%AD%EC%82%BC&rooms=2'
remDr$navigate(url)
reple <- NULL;
# 첫 페이지 댓글 내용 읽기
# doms <- remDr$findElements(using = "css selector", "div.review_ta.ng-scope > ul > li > div.review_desc > p")
# reple_v <- sapply(doms, function (x) {x$getElementText()})
# reple <- append(reple, unlist(reple_v))
repeat{
# 다음 버튼을 찾아서 클릭 이벤트를 발생
btn <- remDr$findElement(using = "css selector", "div.review_ta.ng-scope > div.paginate > a.direction.next") # btn$getElementText() #findElements를 사용할 경우 리스트의 원소별로 추출해야 함.
btn$clickElement()
# 첫 페이지 댓글 내용 읽기
doms <- remDr$findElements(using = "css selector", "div.review_ta.ng-scope > ul > li > div.review_desc > p")
reple_v <- sapply(doms, function (x) {x$getElementText()})
reple <- append(reple, unlist(reple_v))
print(length(reple))
Sys.sleep(2)
# 마지막 페이지의 class 속성이 "direction next disabled" 인 경우 repeat를 끝내라.
if(btn$getElementAttribute("class") == "direction next disabled"){
break;
}
}
remDr <- remoteDriver(remoteServerAddr = "localhost" , port = 4445, browserName = "chrome")
remDr$open()
url<-'https://hotel.naver.com/hotels/item?hotelId=hotel:Shilla_Stay_Yeoksam&destination_kor=%EC%8B%A0%EB%9D%BC%EC%8A%A4%ED%85%8C%EC%9D%B4%20%EC%97%AD%EC%82%BC&rooms=2'
remDr$navigate(url)
btn <- remDr$findElement(using = "css selector", "div.review_ta.ng-scope > div.paginate > a.direction.next") # btn$getElementText() #findElements를 사용할 경우 리스트의 원소별로 추출해야 함.
btn$clickElement()
url<-'https://hotel.naver.com/hotels/item?hotelId=hotel:Shilla_Stay_Yeoksam&destination_kor=%EC%8B%A0%EB%9D%BC%EC%8A%A4%ED%85%8C%EC%9D%B4%20%EC%97%AD%EC%82%BC&rooms=2'
remDr$navigate(url)
repeat{
# 다음 버튼을 찾아서 클릭 이벤트를 발생
btn <- remDr$findElement(using = "css selector", "div.review_ta.ng-scope > div.paginate > a.direction.next") # btn$getElementText() #findElements를 사용할 경우 리스트의 원소별로 추출해야 함.
btn$clickElement()
# 첫 페이지 댓글 내용 읽기
doms <- remDr$findElements(using = "css selector", "div.review_ta.ng-scope > ul > li > div.review_desc > p")
reple_v <- sapply(doms, function (x) {x$getElementText()})
reple <- append(reple, unlist(reple_v))
print(length(reple))
Sys.sleep(2)
# 마지막 페이지의 class 속성이 "direction next disabled" 인 경우 repeat를 끝내라.
if(btn$getElementAttribute("class") == "direction next disabled"){
break;
}
}
url<-'https://hotel.naver.com/hotels/item?hotelId=hotel:Shilla_Stay_Yeoksam&destination_kor=%EC%8B%A0%EB%9D%BC%EC%8A%A4%ED%85%8C%EC%9D%B4%20%EC%97%AD%EC%82%BC&rooms=2'
remDr$navigate(url)
reple <- NULL;
# 첫 페이지 댓글 내용 읽기
# doms <- remDr$findElements(using = "css selector", "div.review_ta.ng-scope > ul > li > div.review_desc > p")
# reple_v <- sapply(doms, function (x) {x$getElementText()})
# reple <- append(reple, unlist(reple_v))
repeat{
# 첫 페이지 댓글 내용 읽기
doms <- remDr$findElements(using = "css selector", "div.review_ta.ng-scope > ul > li > div.review_desc > p")
reple_v <- sapply(doms, function (x) {x$getElementText()})
reple <- append(reple, unlist(reple_v))
print(length(reple))
Sys.sleep(2)
# 다음 버튼을 찾아서 클릭 이벤트를 발생
btn <- remDr$findElement(using = "css selector", "div.review_ta.ng-scope > div.paginate > a.direction.next") # btn$getElementText() #findElements를 사용할 경우 리스트의 원소별로 추출해야 함.
btn$clickElement()
# 마지막 페이지의 class 속성이 "direction next disabled" 인 경우 repeat를 끝내라.
if(btn$getElementAttribute("class") == "direction next disabled"){
break;
}
}
reple <- NULL;
url<-'https://hotel.naver.com/hotels/item?hotelId=hotel:Shilla_Stay_Yeoksam&destination_kor=%EC%8B%A0%EB%9D%BC%EC%8A%A4%ED%85%8C%EC%9D%B4%20%EC%97%AD%EC%82%BC&rooms=2'
remDr$navigate(url)
reple <- NULL;
# 첫 페이지 댓글 내용 읽기
# doms <- remDr$findElements(using = "css selector", "div.review_ta.ng-scope > ul > li > div.review_desc > p")
# reple_v <- sapply(doms, function (x) {x$getElementText()})
# reple <- append(reple, unlist(reple_v))
repeat{
# 첫 페이지 댓글 내용 읽기
doms <- remDr$findElements(using = "css selector", "div.review_ta.ng-scope > ul > li > div.review_desc > p")
reple_v <- sapply(doms, function (x) {x$getElementText()})
reple <- append(reple, unlist(reple_v))
print(length(reple))
Sys.sleep(2)
# 다음 버튼을 찾아서 클릭 이벤트를 발생
btn <- remDr$findElement(using = "css selector", "div.review_ta.ng-scope > div.paginate > a.direction.next") # btn$getElementText() #findElements를 사용할 경우 리스트의 원소별로 추출해야 함.
btn$clickElement()
# 마지막 페이지의 class 속성이 "direction next disabled" 인 경우 repeat를 끝내라.
if(btn$getElementAttribute("class") == "direction next disabled"){
break;
}
}
url<-'https://hotel.naver.com/hotels/item?hotelId=hotel:Shilla_Stay_Yeoksam&destination_kor=%EC%8B%A0%EB%9D%BC%EC%8A%A4%ED%85%8C%EC%9D%B4%20%EC%97%AD%EC%82%BC&rooms=2'
remDr$navigate(url)
Sys.sleep(2)
reple <- NULL;
# 첫 페이지 댓글 내용 읽기
# doms <- remDr$findElements(using = "css selector", "div.review_ta.ng-scope > ul > li > div.review_desc > p")
# reple_v <- sapply(doms, function (x) {x$getElementText()})
# reple <- append(reple, unlist(reple_v))
repeat{
# 첫 페이지 댓글 내용 읽기
doms <- remDr$findElements(using = "css selector", "div.review_ta.ng-scope > ul > li > div.review_desc > p")
reple_v <- sapply(doms, function (x) {x$getElementText()})
reple <- append(reple, unlist(reple_v))
print(length(reple))
Sys.sleep(2)
# 다음 버튼을 찾아서 클릭 이벤트를 발생
btn <- remDr$findElement(using = "css selector", "div.review_ta.ng-scope > div.paginate > a.direction.next") # btn$getElementText() #findElements를 사용할 경우 리스트의 원소별로 추출해야 함.
btn$clickElement()
# 마지막 페이지의 class 속성이 "direction next disabled" 인 경우 repeat를 끝내라.
if(btn$getElementAttribute("class") == "direction next disabled"){
break;
}
}
url<-'https://hotel.naver.com/hotels/item?hotelId=hotel:Shilla_Stay_Yeoksam&destination_kor=%EC%8B%A0%EB%9D%BC%EC%8A%A4%ED%85%8C%EC%9D%B4%20%EC%97%AD%EC%82%BC&rooms=2'
remDr$navigate(url)
Sys.sleep(2)
reple <- NULL;
# 첫 페이지 댓글 내용 읽기
doms <- remDr$findElements(using = "css selector", "div.review_ta.ng-scope > ul > li > div.review_desc > p")
reple_v <- sapply(doms, function (x) {x$getElementText()})
reple <- append(reple, unlist(reple_v))
repeat{
# 다음 버튼을 찾아서 클릭 이벤트를 발생
btn <- remDr$findElement(using = "css selector", "div.review_ta.ng-scope > div.paginate > a.direction.next") # btn$getElementText() #findElements를 사용할 경우 리스트의 원소별로 추출해야 함.
btn$clickElement()
# 첫 페이지 댓글 내용 읽기
doms <- remDr$findElements(using = "css selector", "div.review_ta.ng-scope > ul > li > div.review_desc > p")
reple_v <- sapply(doms, function (x) {x$getElementText()})
reple <- append(reple, unlist(reple_v))
print(length(reple))
Sys.sleep(2)
# 마지막 페이지의 class 속성이 "direction next disabled" 인 경우 repeat를 끝내라.
if(btn$getElementAttribute("class") == "direction next disabled"){
break;
}
}
reple
write(reple, "output/naverhotel.txt")
url<-'https://hotel.naver.com/hotels/item?hotelId=hotel:Shilla_Stay_Yeoksam&destination_kor=%EC%8B%A0%EB%9D%BC%EC%8A%A4%ED%85%8C%EC%9D%B4%20%EC%97%AD%EC%82%BC&rooms=2'
remDr$navigate(url)
Sys.sleep(2)
reple <- NULL;
# 첫 페이지 댓글 내용 읽기
doms <- remDr$findElements(using = "css selector", "div.review_ta.ng-scope > ul > li > div.review_desc > p")
reple_v <- sapply(doms, function (x) {x$getElementText()})
reple <- append(reple, unlist(reple_v))
repeat{
# 다음 버튼을 찾아서 클릭 이벤트를 발생
btn <- remDr$findElement(using = "css selector", "div.review_ta.ng-scope > div.paginate > a.direction.next") # btn$getElementText() #findElements를 사용할 경우 리스트의 원소별로 추출해야 함.
btn$clickElement()
# 두번째 페이지 댓글 내용 읽기
doms <- remDr$findElements(using = "css selector", "div.review_ta.ng-scope > ul > li > div.review_desc > p")
reple_v <- sapply(doms, function (x) {x$getElementText()})
reple <- append(reple, unlist(reple_v))
print(length(reple))
Sys.sleep(2)
# 마지막 페이지의 class 속성이 "direction next disabled" 인 경우 repeat를 끝내라.
if(btn$getElementAttribute("class") == "direction next disabled"){
break;
}
}
remDr <- remoteDriver(remoteServerAddr = "localhost" , port = 4445, browserName = "chrome")
remDr$open()
url<-'https://hotel.naver.com/hotels/item?hotelId=hotel:Shilla_Stay_Yeoksam&destination_kor=%EC%8B%A0%EB%9D%BC%EC%8A%A4%ED%85%8C%EC%9D%B4%20%EC%97%AD%EC%82%BC&rooms=2'
remDr$navigate(url)
Sys.sleep(2)
reple <- NULL;
# 첫 페이지 댓글 내용 읽기
doms <- remDr$findElements(using = "css selector", "div.review_ta.ng-scope > ul > li > div.review_desc > p")
reple_v <- sapply(doms, function (x) {x$getElementText()})
reple <- append(reple, unlist(reple_v))
repeat{
# 다음 버튼을 찾아서 클릭 이벤트를 발생
btn <- remDr$findElement(using = "css selector", "div.review_ta.ng-scope > div.paginate > a.direction.next") # btn$getElementText() #findElements를 사용할 경우 리스트의 원소별로 추출해야 함.
btn$clickElement()
# 두번째 페이지 댓글 내용 읽기
doms <- remDr$findElements(using = "css selector", "div.review_ta.ng-scope > ul > li > div.review_desc > p")
reple_v <- sapply(doms, function (x) {x$getElementText()})
reple <- append(reple, unlist(reple_v))
print(length(reple))
Sys.sleep(2)
# 마지막 페이지의 class 속성이 "direction next disabled" 인 경우 repeat를 끝내라.
if(btn$getElementAttribute("class") == "direction next disabled"){
break;
}
}
word <- "JAVA javascript Aa 가나다 AAaAaA123 %^&*"
gsub(" ", "@", word); sub(" ", "@", word)
word <- "JAVA javascript 가나다 123 %^&*"
gsub("A", "", word)
gsub("a", "", word)
remDr <- remoteDriver(remoteServerAddr = "localhost" , port = 4445, browserName = "chrome")
remDr$open()
url<-'https://hotel.naver.com/hotels/item?hotelId=hotel:Shilla_Stay_Yeoksam&destination_kor=%EC%8B%A0%EB%9D%BC%EC%8A%A4%ED%85%8C%EC%9D%B4%20%EC%97%AD%EC%82%BC&rooms=2'
remDr$navigate(url)
url<-'https://hotel.naver.com/hotels/item?hotelId=hotel:Shilla_Stay_Yeoksam&destination_kor=%EC%8B%A0%EB%9D%BC%EC%8A%A4%ED%85%8C%EC%9D%B4%20%EC%97%AD%EC%82%BC&rooms=2'
remDr$navigate(url)
Sys.sleep(2)
doms <- remDr$findElements(using = "css selector", "div.review_ta.ng-scope > ul > li > div.review_desc > p")
reple_v <- sapply(doms, function (x) {x$getElementText()})
reple <- append(reple, unlist(reple_v))
doms <- remDr$findElements(using = "css selector", "div.review_ta.ng-scope > ul > li > div.review_desc > p")
reple_v <- sapply(doms, function (x) {x$getElementText()})
reple <- append(reple, unlist(reple_v))
source('C:/Users/kangyong/Bigdata_analysis_course_20201228/7_R/Rexam/lab10.R', encoding = 'UTF-8', echo=TRUE)
reple <- NULL;
reple
doms <- remDr$findElements(using = "css selector", "div.review_ta.ng-scope > ul > li > div.review_desc > p")
reple_v <- sapply(doms, function (x) {x$getElementText()})
reple <- append(reple, unlist(reple_v))
reple
reple <- NULL;
doms <- remDr$findElements(using = "css selector", "div.review_ta.ng-scope > ul > li > div.review_desc > p")
reple_v <- sapply(doms, function (x) {x$getElementText()})
reple <- append(reple, unlist(reple_v))
reple
reple <- NULL; btn; <- NULL;
reple <- NULL; btn <- NULL;
doms <- remDr$findElements(using = "css selector", "div.review_ta.ng-scope > ul > li > div.review_desc > p")
reple_v <- sapply(doms, function (x) {x$getElementText()})
reple <- append(reple, unlist(reple_v));reple
reple <- NULL; btn <- NULL; doms <- NULL;
url<-'https://hotel.naver.com/hotels/item?hotelId=hotel:Shilla_Stay_Yeoksam&destination_kor=%EC%8B%A0%EB%9D%BC%EC%8A%A4%ED%85%8C%EC%9D%B4%20%EC%97%AD%EC%82%BC&rooms=2'
remDr$navigate(url)
doms <- remDr$findElements(using = "css selector", "div.review_ta.ng-scope > ul > li > div.review_desc > p")
reple_v <- sapply(doms, function (x) {x$getElementText()})
reple <- append(reple, unlist(reple_v));reple
url<-'https://hotel.naver.com/hotels/item?hotelId=hotel:Shilla_Stay_Yeoksam&destination_kor=%EC%8B%A0%EB%9D%BC%EC%8A%A4%ED%85%8C%EC%9D%B4%20%EC%97%AD%EC%82%BC&rooms=2'
remDr$navigate(url)
Sys.sleep(2)
reple <- NULL; btn <- NULL; doms <- NULL;
# 첫 페이지 댓글 내용 읽기
doms <- remDr$findElements(using = "css selector", "div.review_ta.ng-scope > ul > li > div.review_desc > p")
reple_v <- sapply(doms, function (x) {x$getElementText()})
reple <- append(reple, unlist(reple_v));reple
repeat{
# 다음 버튼을 찾아서 클릭 이벤트를 발생
btn <- remDr$findElement(using = "css selector", "div.review_ta.ng-scope > div.paginate > a.direction.next") # btn$getElementText() #findElements를 사용할 경우 리스트의 원소별로 추출해야 함.
btn$clickElement()
# 두번째 페이지 댓글 내용 읽기
doms <- remDr$findElements(using = "css selector", "div.review_ta.ng-scope > ul > li > div.review_desc > p")
reple_v <- sapply(doms, function (x) {x$getElementText()})
reple <- append(reple, unlist(reple_v))
print(length(reple))
Sys.sleep(2)
# 마지막 페이지의 class 속성이 "direction next disabled" 인 경우 repeat를 끝내라.
if(btn$getElementAttribute("class") == "direction next disabled"){
break;
}
}
print(reple)
url<-'https://hotel.naver.com/hotels/item?hotelId=hotel:Shilla_Stay_Yeoksam&destination_kor=%EC%8B%A0%EB%9D%BC%EC%8A%A4%ED%85%8C%EC%9D%B4%20%EC%97%AD%EC%82%BC&rooms=2'
remDr$navigate(url)
Sys.sleep(2)
reple <- NULL; btn <- NULL; doms <- NULL;
# 첫 페이지 댓글 내용 읽기
doms <- remDr$findElements(using = "css selector", "div.review_ta.ng-scope > ul > li > div.review_desc > p")
reple_v <- sapply(doms, function (x) {x$getElementText()})
reple <- append(reple, unlist(reple_v));reple
Sys.sleep(2)
repeat{
# 다음 버튼을 찾아서 클릭 이벤트를 발생
btn <- remDr$findElement(using = "css selector", "div.review_ta.ng-scope > div.paginate > a.direction.next") # btn$getElementText() #findElements를 사용할 경우 리스트의 원소별로 추출해야 함.
btn$clickElement()
# 두번째 페이지 댓글 내용 읽기
doms <- remDr$findElements(using = "css selector", "div.review_ta.ng-scope > ul > li > div.review_desc > p")
reple_v <- sapply(doms, function (x) {x$getElementText()})
reple <- append(reple, unlist(reple_v))
print(length(reple))
Sys.sleep(2)
# 마지막 페이지의 class 속성이 "direction next disabled" 인 경우 repeat를 끝내라.
if(btn$getElementAttribute("class") == "direction next disabled"){
break;
}
}
print(reple)
remDr <- remoteDriver(remoteServerAddr = "localhost" , port = 4445, browserName = "chrome")
remDr$open()
remDr$navigate("http://www.google.com/")
webElem <- remDr$findElement(using = "css", "[name = 'q']")
webElem$sendKeysToElement(list("PYTHON", key = "enter"))
webElem <- remDr$findElement(using = "css", "[name = 'q']")
webElem$sendKeysToElement(list("호수킹", key = "enter"))
remDr <- remoteDriver(remoteServerAddr = "localhost" , port = 4445, browserName = "chrome")
remDr$open()
url<-'https://www.agoda.com/ko-kr/shilla-stay-yeoksam/hotel/seoul-kr.html?asq=z91SVm7Yvc0eRE%2FTBXmZWCYGcVeTALbG%2FvMXOYFqqcm2JknkW25Du%2BVdjH%2FesXg8ORIaVs1PaEgwePlsVWfwf3sX%2BVNABRcMMOWSvzQ9BxqOPOsvzl8390%2BEhEylPvEiBp0eoREr2xLYHgqmk0Io4J1HYEzEOqyvdox%2BwS6yxHeonB9lh7mJsBIjSBPoMzBLFW01k%2BU8s2bGO6PcSdsu3T30HwabyNzwNYKiv%2BRDxfs%3D&hotel=699258&tick=637215342272&languageId=9&userId=bcb7ecc6-7719-465f-bf29-951e39733c66&sessionId=uouhnqjisace4freagmzbxxc&pageTypeId=7&origin=KR&locale=ko-KR&cid=-1&aid=130243&currencyCode=KRW&htmlLanguage=ko-kr&cultureInfoName=ko-KR&ckuid=bcb7ecc6-7719-465f-bf29-951e39733c66&prid=0&checkIn=2020-05-30&checkOut=2020-05-31&rooms=1&adults=1&childs=0&priceCur=KRW&los=1&textToSearch=%EC%8B%A0%EB%9D%BC%EC%8A%A4%ED%85%8C%EC%9D%B4%20%EC%97%AD%EC%82%BC%20(Shilla%20Stay%20Yeoksam)&productType=-1&travellerType=0&familyMode=off'
remDr$navigate(url)
remDr <- remoteDriver(remoteServerAddr = "localhost", port = 4445, browserName = "chrome")
remDr$open()
remDr$navigate("http://www.yes24.com/24/goods/40936880")
remDr <- remoteDriver(remoteServerAddr = "localhost", port = 4445, browserName = "chrome")
remDr$open()
remDr$navigate("http://www.yes24.com/24/goods/40936880")
webElem <- remDr$findElement("css selector", "body")
remDr$executeScript("scrollTo(0, 0)", args = list(webElem)) # scrollTo: 자바스크립트 함수, scrollBy:
Sys.sleep(1)
remDr$executeScript("scrollBy(0, 3200)", args = list(webElem))
Sys.sleep(1)
remDr$executeScript("scrollBy(0, 3200)", args = list(webElem))
Sys.sleep(1)
remDr$executeScript("scrollBy(0, 3200)", args = list(webElem))
Sys.sleep(3)
repl_v = NULL
endFlag <- FALSE
page <- 3
repeat {
for(index in 3:7) {
fullContentLinkcss <- paste("#infoset_reviewContentList > div:nth-child(",index,") > div.reviewInfoBot.crop > a", sep='')
fullContentLink<-remDr$findElements(using='css selector',  fullContentLinkcss) # 댓글에서 더보기를 클릭
if (length(fullContentLink) == 0) {
cat("종료\n")
endFlag <- TRUE
break
}
remDr$executeScript("arguments[0].click();",fullContentLink); #댓글 전체를 읽기
Sys.sleep(1)
fullContentcss <- paste("#infoset_reviewContentList > div:nth-child(",index,") > div.reviewInfoBot.origin > div.review_cont > p", sep='')
fullContent<-remDr$findElements(using='css selector', fullContentcss)
repl <-sapply(fullContent,function(x){x$getElementText()})
print(repl)
cat("---------------------\n")
repl_v <- c(repl_v, unlist(repl))
}
if(endFlag)
break;
if(page == 10){ # 페이지 읽어오기
page <- 3
nextPagecss <- "#infoset_reviewContentList > div.review_sort.sortTop > div.review_sortLft > div > a.bgYUI.next"
}
else{
page <- page+1;
nextPagecss <- paste("#infoset_reviewContentList > div.review_sort.sortBot > div.review_sortLft > div > a:nth-child(",page,")",sep="")
}
remDr$executeScript("scrollTo(0, 0)", args = list(webElem))
nextPageLink<-remDr$findElements(using='css selector',nextPagecss)
remDr$executeScript("arguments[0].click();",nextPageLink);
#sapply(nextPageLink,function(x){x$clickElement()})
Sys.sleep(3)
print(page)
}
