a[,,4] * 100
a[1,2:3,]
a[2,,2] + 100
a = a[2,,2] + 100;a
a = array(1:24, dim=c(2,3,4))
a
rm(a)
a
a = array(1:24, dim=c(2,3,4))
a[2,2+100,2]
a[2,,2]
a[2,,2]+100
a[,c(2,2)*100,]
a[2,c(2,2)*100,4]
a[2,c(2,100),4]
a[2,c(100),4]
rownames(mat1) <- c("row1","row2","row3")
mat1
mat1
rownames(mat1) <- NULL
mat1
m2 = cbind(n1, n2, n3); m2 # 이름 제거하는 방법은?
m2
m2 = cbind(n1, n2, n3); m2
colnames(mat2) <- NULL
colnames(m2) <- NULL
m2
v = seq(10,38, by=2)
m1 = matrix(v, nrow=3, ncol=5, byrow=T)
m_max_v = max(m1)
m_min_v = min(m1)
row_max = max(m1[,,drop=F]) # 확인 필요
row_max
col_max
m1
apply(x2, 1, sum); apply(x2, 2, sum)  # apply는 3번째에 함수를 넣을 수 있다.
apply(x2, 1, max)
apply(m1, , max)
apply(m1, 1, max)
m1 = matrix(v, nrow=3, ncol=5, byrow=T)
m1
apply(m1, 1, max)
apply(m1, 2, max)
apply(m1, 3, max)
row_max = apply(m1, 1, max)
col_max = apply(m1, 2, max)
row_max
col_max
a[,2:3,]
a[1,2:3,]
a[,2:3,]
a[2,2:3,]
a[1,2:3,]
a[1:2,2:3,]
a[1,2:3,]
a[2,,2]
a[2,,2]+100
a[2,,2] = 100
a[2,,2] = 100;a
a[2,,2]
a = array(1:24, dim=c(2,3,4))
a[2,,2]
a[2,,2] = +100
a
a[2,,2] = a[2,,2]+100
a = array(1:24, dim=c(2,3,4))
a = array(1:24, dim=c(2,3,4))
a[2,,2] = a[2,,2]+100
a
a[,,1]
a[,,1] = a[,,1]-2
a[,,1] = a[,,1]-2;a
a = array(1:24, dim=c(2,3,4))
a[,,1] = a[,,1]-2;a
a[,,] = a[,,]*10;a
a = array(1:24, dim=c(2,3,4))
a[,,] = a[,,]*10;a
v1 = sample(1:30, 10, replace=T)
v1 = sample(1:30, 10, replace=T)
v2 = letters[26:17]
names(v2) = v1
v1;v2
v = seq(10,38, by=2)
m1 = matrix(v, nrow=3, ncol=5, byrow=T)
m1
n1 = c(1:3)
n2 = c(4:6)
n3 = c(7:9)
m2 = cbind(n1, n2, n3); m2
colnames(m2) <- NULL
m2
score <- c(1,3,2,4,2,1,3,5,1,3,3,3)
class(score)
summary(score)
f_score <- factor(score)
class(f_score)
f_score
summary(f_score)
levels(f_score)
f_score <- factor(score)
class(f_score)
f_score
summary(f_score)
f_score1 <- as.factor(score)
class(f_score1)
f_score1
summary(f_score1)
levels(f_score1)
plot(score)
plot(f_score)
data1 <- c("월","수","토","월", "수", "화", "수", "수",
"목","화")
data1
class(data1)
summary(data1)
day1 <- factor(data1)
day1
class(day1)
summary(day1)
levels(day1)
week.korabbname <- c("일", "월", "화",
"수", "목", "금", "토")
day2 <- factor(data1,
levels=week.korabbname)
day2
day2
summary(day2)
levels(day2)
btype <- factor(
c("A", "O", "AB", "B", "O", "A", "O"),
levels=c("A", "B", "O"))
btype
summary(btype)
levels(btype)
gender <- factor(c(1,2,1,1,1,2,1,2),
levels=c(1,2),
labels=c("남성", "여성"))
gender
summary(gender)
levels(gender)
data()
iris; head(iris);tail(iris)
iris
head(iris)
tail(iris)
View(iris)
str(iris)
library()
summary(iris)
summary(iris)
summary(iris)
summary(iris)
#Dataframe 실습
no <- c(1,2,3,4)
name <- c('Apple','Banana','Peach','Berry')
qty <- c(5,2,7,9)
price <- c(500,200,200,500)
fruit <- data.frame(no, name, qty, price)
str(fruit)
View(fruit)
fruit[1,]
fruit[-1,]
fruit[,2]
fruit[,3] # fruit[,3, drop=F]
fruit[, c(3,4)]
fruit[3,1]
fruit[3,2]
fruit[, c(3,4)]
fruit[3,2]
fruit[3,1]
fruit[,3]
fruit$qty
fruit[[3]]
fruit[3]  # 데이터프레임 형식 유지
str(fruit$qty)
str(fruit[3])
fruit[,3]
fruit$qty
fruit[[3]]
fruit[3]  # 데이터프레임 형식 유지
fruit[3]  # 데이터프레임 형식 유지
str(fruit$qty)
str(fruit[3])
english <- c(90, 80, 60, 70)
math <- c(50, 60, 100, 20)
classnum <- c(1,1,2,2)
df_midterm <- data.frame(
english, math, classnum)
df_midterm
str(df_midterm)
colnames(df_midterm)
rownames(df_midterm)
names(df_midterm)
mean(df_midterm$english)
mean(df_midterm$math)
df_midterm
names(df_midterm)
df_midterm2 <- data.frame(
c(90, 80, 60, 70),
c(50, 60, 100, 20),
c(1,1,2,2))
colnames(df_midterm2)
rownames(df_midterm2)
names(df_midterm2)
names(df_midterm2)
df_midterm2
df_midterm2 <- data.frame(
영어=c(90, 80, 60, 70),
수학=c(50, 60, 100, 20),
클래스=c(1,1,2,2))
df_midterm2
df_midterm2$영어
df <- data.frame(var1=c(4,3,8),
var2=c(2,6)) # 오류
df <- data.frame(var1=c(4,3,8),
var2=c(2,6,1))
df
str(df)
df$var_sum <- df$var1 + df$var2
df$var_sum
df$var_mean <- df$var_sum/2
df$var_mean
df$result <- ifelse(df$var1>df$var2,
df$result
df$result
df$result <- ifelse(df$var1>df$var2,
"var1이 크다", "var1이 작다")
df$result
df
getwd()
score <- read.csv("data/score.csv")
score
str(score)
score
score$sum <-
score$math+score$english+score$science
score
score$result <- ifelse(score$sum >= 200,
"pass", "fail")
score
summary(score$result)
table(score$result)
summary(factor(score$result))
score$result = factor(score$result)
summary(factor(score$result))
summary(score$result) #
table(score$result) # 타입과 관계없이 무조건 개수를 리턴
summary(score$result) #
summary(factor(score$result)) #
score$result = factor(score$result)
str(score)
summary(score)
score$id = as.character(score$id)
score$class = factor(score$class)
score
str(score)
summary(score)
score$grade<-ifelse(score$sum >= 230,"A",
ifelse(score$sum >= 215,"B",
ifelse(score$sum >=200,"C","D")))
score
summary(score)
str(score)
score
#Dataframe 실습
no <- c(1,2,3,4)
name <- c('Apple','Banana','Peach','Berry')
qty <- c(5,2,7,9)
price <- c(500,200,200,500)
fruit <- data.frame(no, name, qty, price)
str(fruit)
View(fruit)
v <- c(10,3,7,4,8)
sort(v)
order(v)
emp <- read.csv(file.choose())
emp <- read.csv(file.choose())
emp
str(emp)
summary(emp)
emp$job <- as.factor(emp$job)
emp$deptno <- as.factor(emp$deptno)
emp$mgr <- as.factor(emp$mgr)
summary(emp)
emp$ename
emp[,2]
emp[,"ename"]
emp[,2, drop=FALSE]
emp[,"ename"]
emp[,2, drop=FALSE]
emp[,"ename",drop=F]
emp[2]
emp[,"ename",drop=F] # dataframe구조 유지
emp["ename"]
emp["ename"]
view(emp)
summary(emp)
view(emp)
View(emp)
emp[,c(2,3,6)]
emp[,c("ename","job","sal")]
subset(emp,select = c(ename, job, sal))
emp[1:3,]
emp[c(1,2,3),]
head(emp)
head(emp, n=1)
emp[9,]
emp$ename=="KING"
emp[c(F,F,F,F,F,F,F,F,T,F,F,F,
F,F,F,F,F,F,F,F),]
emp[emp$ename=="KING",]
subset(emp,subset=emp$ename=="KING")
subset(emp,emp$ename=="KING")
emp[!is.na(emp$comm),]
emp[!is.na(emp$comm),]
subset(emp,!is.na(emp$comm))
View(emp)
subset(emp, emp$sal>= 2000,
c("ename","sal"))
subset(emp, select=c("ename","sal"),
subset= emp$sal>= 2000)
emp[emp$sal>=2000,c("ename","sal")]
subset(emp, sal>=2000 & sal<=3000, c("ename","sal"))
emp[emp$sal>=2000 & emp$sal <=3000, c("ename","sal")]
y <- c(0,25,50,75,100)
z <- c(50, 50, 50, 50,50)
y == z
y != z
y > z
y < z
y >= z
y <= z
y == 50 # c(50, 50, 50, 50, 50)
y > 50
num1 <- 11 # c(11)
num2 <- 3  # c(3)
num1 / num2
num1 %% num2
num1 %/% num2 #
emp$ename=="KING"
emp[c(F,F,F,F,F,F,F,F,T,F,F,F,
F,F,F,F,F,F,F,F),]
df1 = data.frame(
x=c(1:5),
y=seq(2:10, by=2))
df1 = data.frame(
x=c(1:5),
y=seq(2,10, by=2))
df1
df2 = data.frame(
col1=c(1:5),
col2=letters[1:5],
col3=c(6:10))
df2
emp[is.na(emp$comm),]
emp[!is.na(emp$comm),]
is.na(emp$comm)
제품명 = c("사과","딸기","수박")
가격 = c(1800,1500,3000)
판매량 = c(24,38,13)
df3 = data.frame(제품명, 가격, 판매량);df3
df3 = data.frame(제품명, 가격, 판매량)
class(df3)
summary(df3)
mean(df3$가격)
mean(df3$판매량)
name <- c("Potter", "Elsa", "Gates", "Wendy", "Ben")
gender <- factor(c("M", "F", "M", "F", "M"))
math <- c(85, 76, 99, 88, 40)
df4 = data.frame(name, gender, math)
df4
#(a)
stat <- c(76, 73, 95, 82, 35)
stat
df$stat = stat
df$stat = df$stat
df4
df4$stat = df4$stat
df4
df4 = data.frame(name, gender, math)
df4
df4$stat = df4$stat
df4
df4$stat = c(76, 73, 95, 82, 35)
df4
df4$score = df4$math + df4$stat
df4
df4$grade = ifelse(df4$score>150,"A",df4$score>100,"B",
df4$score>70,"C","D")
df4$grade = ifelse(df4$score>150,"A",
ifelse(df4$score>100,"B",
ifelse(df4$score>70,"C","D")))
df4
emp <- read.csv(file.choose())
emp
myemp = emp
myemp
str(myemp)
emp[3:5,]
emp[,-4]
emp[,"ename"]
emp[,c("ename","sal")]
emp$job == "SALESMAN"
subset(emp,subset=emp$ename=="KING")
subset(emp,subset=emp$ename=="KING")
subset(emp,emp$ename=="KING")
emp[emp$job == "SALESMAN"]
emp[emp$job == "SALESMAN",]
emp[emp$job == "SALESMAN","ename"]
emp[emp$job == "SALESMAN",c("ename","sal","job")]
subset(emp, sal>=1000 & sal<=3000, c("ename","sal","deptno"))
emp[!is.na(emp$job),]
emp[!is.ANALYST(emp$job),]
emp[!is."ANALYST"(emp$job),]
emp[!is.ANALYST(emp$job),]
emp[!is.na(emp$comm),]
emp[!is.analyst(emp$job),]
#문제14
emp[!is.ANALYST(emp$job),]
#문제14
emp[is.ANALYST(emp$job),]
is.na(emp$comm
is.na(emp$comm
is.na(emp$comm)
is.ANALYST(emp$job)
emp[!is."ANALYST"(emp$job),]
emp[!is.na(emp$comm),]
subset(emp,!is.na(emp$comm),c("ename","sal"))
emp[!is.na(emp$comm),]
#문제17
emp
#문제17
sort(emp)
sort(emp, c("sal"))
#문제17
sort(emp, c("sal"),)
sort(emp, c("sal"))
sort(emp, c("sal"), decreasing = TRUE)
emp$job <- as.factor(emp$job)
str(emp)
str(myemp)
myemp
summary(myemp)
myemp$deptno = as.factor(myemp$deptno)
myemp$deptno
summary(myemp)
myemp$job = as.factor(myemp$job)
myemp$job
summary(myemp)
summary(myemp$job)
summary(myemp$deptno)
sort(myemp, c("sal"), decreasing = TRUE)
sort(myemp$sal, decreasing = TRUE)
myemp
sort(myemp$sal, decreasing = TRUE)
sort(myemp$sal)
subset(myemp, sal>=1000 & sal<=3000, c("ename","sal","deptno"))
sort(myemp, myemp$sal)
sort[myemp$sal]
sort[,myemp$sal]
sort(myemp$sal)
myemp = sort(myemp$sal)
myemp
myemp = emp
myemp[c(order(myemp$sal)),]
myemp[c(order(myemp$sal)),]
subset(emp,select = c(ename, job, sal))
subset(emp,subset=emp$ename=="KING")
subset(myemp,select = c(ename, job))
subset(myemp,subset=emp$ename=="KING", select = c(ename, job))
subset(myemp,subset=emp$job=="SALESMAN", select = c(ename, job))
subset(myemp,subset=emp$job=="SALESMAN" or "ANALYST", select = c(ename, job))
subset(myemp, myemp$job=="SALESMAN" & myemp$job=="ANALYST"
, select = c(ename, job))
subset(myemp, myemp$job=="SALESMAN" & myemp$job=="ANALYST"
, select = c(ename, job))
subset(emp,subset=emp$ename=="KING")
subset(myemp, myemp$job=="SALESMAN" & myemp$job=="ANALYST"
, select = c("ename", "job"))
subset[myemp, myemp$job=="SALESMAN" & myemp$job=="ANALYST"
, select = c("ename", "job")]
subset(myemp, myemp$job=="SALESMAN" & myemp$job=="ANALYST"
, select = c("ename", "job"))
myemp
subset(myemp, myemp$job=="SALESMAN" | myemp$job=="ANALYST"
, select = c("ename", "job"))
subset(myemp,select = c(ename, job, sal))
subset(myemp, myemp$job=="SALESMAN" | myemp$job=="ANALYST"
, select = c("ename", "job", "sal"))
subset(myemp, myemp$job=="ANALYST"
, select = c("ename", "job", "sal"))
subset(myemp, myemp$job=="ANALYST"
, select = c("ename", "job", "sal"))
subset(myemp, myemp$job=="!ANALYST"
, select = c("ename", "job", "sal"))
subset(myemp, myemp$job!=="ANALYST"
, select = c("ename", "job", "sal"))
subset(myemp, myemp$job != "ANALYST"
, select = c("ename", "job", "sal"))
summary(df3)
class(f_score1)
summary(f_score1)
levels(f_score1)
summary(df3)
class(df3)
class("제품명")
class("제품명")
str(iris) # 구조를 보기
summary(iris)
#문제1
class("제품명")
summary(iris)
